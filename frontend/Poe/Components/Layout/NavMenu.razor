@using Microsoft.AspNetCore.Components.Authorization
@inject Tools.AppBasePath BasePath
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="@($"{BasePath.Value}/backer/")">Backer</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@($"{BasePath.Value}/backer/")" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Backer
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@($"{BasePath.Value}/backer/rules")">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Rules
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@($"{BasePath.Value}/backer/endpoints")">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Endpoints
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@($"{BasePath.Value}/backer/jobs")">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Jobs
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@($"{BasePath.Value}/backer/account")">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Account
            </NavLink>
        </div>

        <br/>
        <br/>
        @if (_isAuthenticated)
        {
            <h4><a href="@($"{BasePath.Value}/logout")">Logout</a></h4>
        }
        else
        {
            <h4><a href="@($"{BasePath.Value}/login")">Login</a></h4>
        }
    </nav>
</div>

@code
{
    private bool _isAuthenticated;
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            _isAuthenticated = true;
        }
        else
        {
            _isAuthenticated = false;
        }
    }
}
