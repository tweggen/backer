services:
  hannibal-db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 8pj5EUKCMrs5DEJI8RzYtN68zDKblB2IQoMJVdxpkGeLLBdz229jdYFT0qIMBHkm
      POSTGRES_DB: hannibal
    volumes:
      - /mnt/HC_Volume_103503238/essentialvault/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build:
      context: ./
      dockerfile: Api/Dockerfile
    image: hannibal-api:latest
    volumes:
      - dataprotection:/home/app/.aspnet/DataProtection-Keys
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api/v1`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
  frontend:
    environment:
      - ASPNETCORE_BASEPATH=/app1
    build:
      context: ./
      dockerfile: frontend/Poe/Dockerfile
    image: poe-ui:latest
    volumes:
      - dataprotection:/home/app/.aspnet/DataProtection-Keys
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/app1`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"
volumes:
  dataprotection: